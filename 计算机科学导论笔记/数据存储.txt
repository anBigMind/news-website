计算机内部存储的数据类型有五种
	数字，文本，音频，图像，视频
存储无符号整数
	计算机分配一个长度大小为n的内存，最大可表示2∧n-1
	将整数变为二进制数
	如果二进制数不足n位，则在二进制数左边补0，直到总位数为n位。如果位数大于n，会导致溢出。
存储有符号整数-符号加绝对值表示法
	把分配好的长度为n的内存分为两半
	左半边0000-0111存储正数
	右半边1000-1111存储负数
	最左边一位代表符号，0为正，1为负
	符号加绝对值表示法有两个0，+0：0000，-0：1000
存储有符号整数-二级制补码
	从右边复制位，直到有1被复制，然后反转其余位
	存储方法：
		1.将整数变为n位的二进制数
		2.如果整数是整数或者零（即第一位为0），以原样存储，如果是负数（即第一位为1），计算机取补码存储
	还原方法：
		1.如果最左位为1，计算机取其补码，如果最左位为0，不进行操作
		2.将二进制数转换为十进制
	补码表示法只有一个0，比符号加绝对值法多表示一个负数
存储实数-浮点表示法
	浮点表示法由三部分组成：符号     位移量（指数）    定点数
	1.yyyyyyyyyyyyyyyy  二进制浮点表示法
	d.xxxxxxxxxxxxxxxx  十进制科学计数法
	符号由一位二进制数处理（0为正，1为负）
	指数用余码表示法存储
	尾数作为无符号整数存储---最左边一位非零数码不存储，默认会加上
	余码：
		余码是0表示负，1表示正，将所有的数，作为无符号数处理，统一移到表示正的一边（1为正）
		这个偏移量为2∧（m-1）-1，m代表系统分配的存储单元位数
	浮点数存储为符号位+指数+（1）尾数
	浮点数0.0存储时约定符号、指数、尾数均为0
存储音频
	每个样本分配的位数被称为位深度
	位深度*每秒采样的样本数=位率
	mp3格式每秒采样44100次，位深度16bit
存储图片
	光栅图也叫位图，用于表示像素的位的数量，即色彩深度
		真彩色用24位编码一个像素，每个RGB值都为八位，可表示0-255，总共16,777,216种颜色
		索引色用8位编码一个像素，为元素赋0-255之间的一个数，总共256个索引
	矢量图储存描述几何图形的数学公式，不适合复杂图形的存储，不会因为改变大小影响分辨率
