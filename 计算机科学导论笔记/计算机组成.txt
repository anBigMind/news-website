CPU
	算术逻辑单元（ALU）
		算术逻辑单元对数据进行逻辑、移位、和算术运算
	寄存器
		数据寄存器
			存储输入数据，运算的结果和中间结果
		指令寄存器
			存储从内存中提取的相应指令，供CPU解释并执行
		程序计数器
			程序计数器保存当前正在执行的指令
			当前指令执行完后，计数器自动加一，指向下一条指令的内存地址
	控制单元
		控制单元控制各个子系统的操作
主存储器
	主存储器是计算机内第二个子系统，它是存储单元的集合
	每一个存储单元都有一个唯一的标识，称为地址
	数据以称为字的位组在内存中传入传出，字可以是8位、16位、32位、64位，甚至更高
	地址空间：
		所有在存储器中标识的或独立的地址单元的总数称为地址空间
		字节的单位是2的幂，这样表示寻址更方便
		比如64KB的内存（2^16），字长为1字节，就需要16位来确定地址
		内存的地址用无符号二进制整数定义
		起始地址通常是0000000000000000，最后一个地址通常是1111111111111111
	存储器的类型
		RAM（随机存取存储器）
			可以用存储单元地址随机存储一个数据项，而不用存取它前面的所有数据项
			系统断电后，存储在RAM中数据将会丢失
			SRAM（静态RAM）
				用的触发器，通电时数据始终存在，不需要刷新
				速度快价格贵（现在CPU/GPU缓存）
			DRAM（动态RAM）
				用的电容器会漏电，需要周期性刷新，不然会丢失数据
				跟SRAM比较慢，比较便宜（现在的内存条/固态硬盘）
		ROM（只读存储器）
			早期的存储芯片，出厂时即写好数据，不能更改
			PROM（可编程只读存储器）
				同样是早期存储芯片，出厂时无数据，可自己写入，写入后不能更改
			EPROM（可擦除可编程存储器）
				还是芯片，用紫外光可擦写
			EEPROM（电可擦除可编程只读存储器）
				还是芯片，用做IC卡之类的，FLASH还可以用作固态硬盘，擦写更方便
存储器的层次结构
	快的存储器贵，便宜的慢，用高速存储器当寄存器，中速存储器当高速缓冲存储器（现在是集成在CPU内部的缓存），用低速存储器当主存
	高速缓冲存储器
		CPU要存取数据时，先检查高速缓冲存储器
		如果要存取的字存在，直接复制走
		如果不存在，CPU从主存中复制一份从需要读取的字开始的数据块，该数据块将覆盖缓存中的内容
		CPU存取缓存中的字
输入输出子系统
	分为存储设备和非存储设备
	非存储设备
		使CPU和内存可以与外界通信，无法存储数据
	存储设备
		磁介质存储设备（硬盘、磁带）
		光存储设备（光盘）
子系统的互连
	CPU和存储器的连接
		CPU和存储器被称为总线的三组线路连接在一起，分别是数据总线，地址总线和控制总线
		数据总线
			由多根线组成，每一根线每次传递一位的数据，线的数量取决于计算机字的大小
		地址总线
			允许访问存储器中的某个字，地址总线的线数取决于存储空间的大小
			地址位数有多少位，就需要多少根
		控制总线
			负责在中央处理器和内存之间传递信息，控制总线的线数取决于计算机所需要的控制命令总数
	I/O设备的连接
		I/O设备通过控制器连接在控制总线上，不能直接连接
		并行控制器
			SCSI
		串行控制器
			火线
			USB
			HDMI
	I/O设备的寻址
		独立寻址
			用来读写I/O设备和内存的指令不一样，地址内存和I/O设备的地址可以重叠不影响
		映射寻址
			用来读写的指令一样，I/O设备的内存中的数据一样拥有单独的地址
			优点是所需指令集更少，缺点是I/O设备占用一部分内存地址
程序执行
	CPU利用重复的机器周期来执行程序中的指令，一步一条，从开始到结束
	一个简化的周期包含三步：取指令，译码，执行
	取指令
		控制单元命令系统将下一条将要执行的指令复制到CPU的指令寄存器中
		被复制的指令地址保存在程序计数器中
		复制完成后，程序计数器自动加一指向内存中的下一条指令。
	译码
		当指令置于指令寄存器后，该指令将由控制单元负责译码
		译码的结果是产生一系列系统可以执行的二进制代码
	执行
		译码完成后，控制单元发送任务命令到ALU或是其他某个单元，让CPU进行读写或是计算之类的操作
输入输出操作
	计算机通过命令在I/O设备和CPU和内存之间之间传输数据，但是I/O设备比CPU慢得多，所以需要同步
	程序控制输入/输出
		CPU等着I/O设备，收到传输指令时开始不停检查I/O设备状态，等好了传输
	中断控制输入输出
		CPU收到传输指令时给I/O设备说好了叫它
	直接存储器存取
		一般用在和磁盘等设备传递大量信息，需要一个DMA控制器
		CPU收到指令时发消息给DMA，包括传输类型，内存地址，传输的字节数
		DMA准备好了之后请求CPU接管总线，然后开始在内存和外部设备间传输数据
		CPU等待到DMA传输完数据，继续工作
不同的体系结构
	CISC-复杂指令集计算机
		编程简单，电路复杂需要微内存（PC处理器即为此种）
	RISC-精简指令集计算机
		编程复杂，电路简单
	流水线
		流水线技术通过错开三阶段处理指令的方法增加吞吐量
		控制单元如果能同时执行取指令译码执行，就可以在第一个指令译码时取第二个指令
		第二个指令译码第一个执行的时候，可以取第三个指令
	并行处理
		SISD组织-单指令流单数据流
			一个控制单元，一个处理单元，顺序执行
		SIMD组织-单指令多数据流
			用一个控制单元，多个算术逻辑单元，达到用一条指令处理多个数据项的效果
		MIMD组织
			多个控制单元和多个算术逻辑单元处理多个数据项，每条指令对应一个数据项
			可以同时执行多个任务
指令集
	每条计算机指令由两部分组成，操作码和操作数
	每条指令由十六位组成被分为四个四位的域
	操作码占最左边一个域，其他三个域含有操作数或操作数的地址
	不一定用完三个域，没用到的全部写0